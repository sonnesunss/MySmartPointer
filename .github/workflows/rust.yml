name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Find changed Cargo projects
        id: changed-projects
        run: |
          # 获取更改的文件列表并提取涉及Cargo.toml的子目录
          CHANGED_DIRS=$(git diff --name-only HEAD^ HEAD | grep -E '^MySmartPointer/[^/]+/Cargo.toml$' | sed 's|/Cargo.toml$||' | sort -u)
          
          # 如果没有更改的Cargo项目，设置空列表
          if [ -z "$CHANGED_DIRS" ]; then
            echo "No Cargo projects changed."
            echo "changed_dirs=" >> $GITHUB_OUTPUT
          else
            echo "Changed Cargo projects: $CHANGED_DIRS"
            echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_OUTPUT
          fi

      - name: Build changed projects
        if: steps.changed-projects.outputs.changed_dirs != ''
        run: |
          # 遍历更改的目录并运行 cargo build
          for dir in ${{ steps.changed-projects.outputs.changed_dirs }}; do
            if [ -f "$dir/Cargo.toml" ]; then
              echo "Building $dir"
              cd "$dir" && cargo build --verbose && cd -
            else
              echo "Skipping $dir: No Cargo.toml found"
            fi
          done

      - name: Test changed projects
        if: steps.changed-projects.outputs.changed_dirs != ''
        run: |
          # 遍历更改的目录并运行 cargo test
          for dir in ${{ steps.changed-projects.outputs.changed_dirs }}; do
            if [ -f "$dir/Cargo.toml" ]; then
              echo "Testing $dir"
              cd "$dir" && cargo test --verbose && cd -
            else
              echo "Skipping $dir: No Cargo.toml found"
            fi
          done
